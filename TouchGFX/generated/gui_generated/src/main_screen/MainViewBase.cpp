/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    slideMenuStateChangedCallback(this, &MainViewBase::slideMenuStateChangedCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    backgroundImage.setXY(0, 0);
    backgroundImage.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_SCREEN2_ID));

    slideMenuLeft.setup(touchgfx::SlideMenu::EAST,
        touchgfx::Bitmap(BITMAP_LEFT_SLIDE_MENU_BACKGROUND_ID),
        touchgfx::Bitmap(BITMAP_LEFT_SLIDE_MENU_BUTTON_ID),
        touchgfx::Bitmap(BITMAP_LEFT_SLIDE_MENU_BUTTON_ID),
        0, 0, 50, 110);
    slideMenuLeft.setState(touchgfx::SlideMenu::COLLAPSED);
    slideMenuLeft.setVisiblePixelsWhenCollapsed(25);
    slideMenuLeft.setHiddenPixelsWhenExpanded(0);
    slideMenuLeft.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    slideMenuLeft.setAnimationDuration(18);
    slideMenuLeft.setExpandedStateTimeout(180);
    slideMenuLeft.setXY(0, 0);
    slideMenuLeft.setStateChangedCallback(slideMenuStateChangedCallback);

    button1.setXY(0, 0);
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_00_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_00_ID));
    button1.setAction(buttonCallback);
    slideMenuLeft.add(button1);

    button2.setXY(0, 50);
    button2.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_01_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_01_ID));
    button2.setAction(buttonCallback);
    slideMenuLeft.add(button2);

    button3.setXY(0, 100);
    button3.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_02_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_02_ID));
    button3.setAction(buttonCallback);
    slideMenuLeft.add(button3);

    button4.setXY(0, 150);
    button4.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_03_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_03_ID));
    button4.setAction(buttonCallback);
    slideMenuLeft.add(button4);

    button5.setXY(0, 200);
    button5.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_04_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_04_ID));
    button5.setAction(buttonCallback);
    slideMenuLeft.add(button5);

    slideMenuRight.setup(touchgfx::SlideMenu::WEST,
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BACKGROUND_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        touchgfx::Bitmap(BITMAP_RIGHT_SLIDE_MENU_BUTTON_ID),
        18, 0, 0, 110);
    slideMenuRight.setState(touchgfx::SlideMenu::COLLAPSED);
    slideMenuRight.setVisiblePixelsWhenCollapsed(25);
    slideMenuRight.setHiddenPixelsWhenExpanded(0);
    slideMenuRight.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    slideMenuRight.setAnimationDuration(18);
    slideMenuRight.setExpandedStateTimeout(180);
    slideMenuRight.setXY(405, 0);
    slideMenuRight.setStateChangedCallback(slideMenuStateChangedCallback);

    toggleButton1.setXY(25, 0);
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_00_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_00_ID));
    toggleButton1.setAction(buttonCallback);
    slideMenuRight.add(toggleButton1);

    toggleButton2.setXY(25, 50);
    toggleButton2.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_01_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_01_ID));
    toggleButton2.setAction(buttonCallback);
    slideMenuRight.add(toggleButton2);

    toggleButton3.setXY(25, 100);
    toggleButton3.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_02_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_02_ID));
    toggleButton3.setAction(buttonCallback);
    slideMenuRight.add(toggleButton3);

    toggleButton4.setXY(25, 150);
    toggleButton4.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_03_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_03_ID));
    toggleButton4.setAction(buttonCallback);
    slideMenuRight.add(toggleButton4);

    slideMenuBottom.setup(touchgfx::SlideMenu::NORTH,
        touchgfx::Bitmap(BITMAP_BOTTOM_SLIDE_MENU_BACKGROUND_ID),
        touchgfx::Bitmap(BITMAP_BOTTOM_SLIDE_MENU_BUTTON_ID),
        touchgfx::Bitmap(BITMAP_BOTTOM_SLIDE_MENU_BUTTON_ID),
        0, 17, 212, 0);
    slideMenuBottom.setState(touchgfx::SlideMenu::COLLAPSED);
    slideMenuBottom.setVisiblePixelsWhenCollapsed(25);
    slideMenuBottom.setHiddenPixelsWhenExpanded(0);
    slideMenuBottom.setAnimationEasingEquation(touchgfx::EasingEquations::cubicEaseInOut);
    slideMenuBottom.setAnimationDuration(18);
    slideMenuBottom.setExpandedStateTimeout(180);
    slideMenuBottom.setXY(0, 198);
    slideMenuBottom.setStateChangedCallback(slideMenuStateChangedCallback);

    toggleButton5.setXY(15, 24);
    toggleButton5.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_00_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_00_ID));
    toggleButton5.setAction(buttonCallback);
    slideMenuBottom.add(toggleButton5);

    toggleButton6.setXY(80, 24);
    toggleButton6.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_01_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_01_ID));
    toggleButton6.setAction(buttonCallback);
    slideMenuBottom.add(toggleButton6);

    toggleButton7.setXY(145, 24);
    toggleButton7.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_02_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_02_ID));
    toggleButton7.setAction(buttonCallback);
    slideMenuBottom.add(toggleButton7);

    toggleButton8.setXY(210, 24);
    toggleButton8.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_03_ID), touchgfx::Bitmap(BITMAP_MENU_TOGGLE_BUTTON_SELECTED_03_ID));
    toggleButton8.setAction(buttonCallback);
    slideMenuBottom.add(toggleButton8);

    slideMenuTop.setup(touchgfx::SlideMenu::SOUTH,
        touchgfx::Bitmap(BITMAP_TOP_SLIDE_MENU_BACKGROUND_ID),
        touchgfx::Bitmap(BITMAP_TOP_SLIDE_MENU_BUTTON_ID),
        touchgfx::Bitmap(BITMAP_TOP_SLIDE_MENU_BUTTON_ID),
        0, 0, 212, 70);
    slideMenuTop.setState(touchgfx::SlideMenu::COLLAPSED);
    slideMenuTop.setVisiblePixelsWhenCollapsed(25);
    slideMenuTop.setHiddenPixelsWhenExpanded(20);
    slideMenuTop.setAnimationEasingEquation(touchgfx::EasingEquations::backEaseInOut);
    slideMenuTop.setAnimationDuration(18);
    slideMenuTop.setExpandedStateTimeout(180);
    slideMenuTop.setXY(0, 0);
    slideMenuTop.setStateChangedCallback(slideMenuStateChangedCallback);

    button6.setXY(0, 20);
    button6.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_00_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_00_ID));
    button6.setAction(buttonCallback);
    slideMenuTop.add(button6);

    button7.setXY(50, 20);
    button7.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_01_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_01_ID));
    button7.setAction(buttonCallback);
    slideMenuTop.add(button7);

    button8.setXY(100, 20);
    button8.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_02_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_02_ID));
    button8.setAction(buttonCallback);
    slideMenuTop.add(button8);

    button9.setXY(150, 20);
    button9.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_03_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_03_ID));
    button9.setAction(buttonCallback);
    slideMenuTop.add(button9);

    button10.setXY(200, 20);
    button10.setBitmaps(touchgfx::Bitmap(BITMAP_MENU_BUTTON_04_ID), touchgfx::Bitmap(BITMAP_MENU_BUTTON_PRESSED_04_ID));
    button10.setAction(buttonCallback);
    slideMenuTop.add(button10);

    buttonmain.setXY(195, 100);
    buttonmain.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_ROUND_ID), touchgfx::Bitmap(BITMAP_BTN_ROUND_PRESSED_ID));
    buttonmain.setAction(buttonCallback);

    Wifi.setXY(84, 38);
    Wifi.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    Wifi.setLinespacing(0);
    Wifi.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));

    add(__background);
    add(backgroundImage);
    add(slideMenuLeft);
    add(slideMenuRight);
    add(slideMenuBottom);
    add(slideMenuTop);
    add(buttonmain);
    add(Wifi);
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::collapseAllOtherSlideMenu(const touchgfx::SlideMenu& value)
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
    {
        //Interaction5
        //When button1 clicked reset timer slideMenuLeft
        //reset expanded state timer on slideMenuLeft
        slideMenuLeft.resetExpandedStateTimer();
    }
    else if (&src == &button2)
    {
        //Interaction6
        //When button2 clicked reset timer slideMenuLeft
        //reset expanded state timer on slideMenuLeft
        slideMenuLeft.resetExpandedStateTimer();
    }
    else if (&src == &button3)
    {
        //Interaction7
        //When button3 clicked reset timer slideMenuLeft
        //reset expanded state timer on slideMenuLeft
        slideMenuLeft.resetExpandedStateTimer();
    }
    else if (&src == &button4)
    {
        //Interaction8
        //When button4 clicked reset timer slideMenuLeft
        //reset expanded state timer on slideMenuLeft
        slideMenuLeft.resetExpandedStateTimer();
    }
    else if (&src == &button5)
    {
        //Interaction9
        //When button5 clicked reset timer slideMenuLeft
        //reset expanded state timer on slideMenuLeft
        slideMenuLeft.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton1)
    {
        //Interaction15
        //When toggleButton1 clicked reset timer slideMenuRight
        //reset expanded state timer on slideMenuRight
        slideMenuRight.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton2)
    {
        //Interaction16
        //When toggleButton2 clicked reset timer slideMenuRight
        //reset expanded state timer on slideMenuRight
        slideMenuRight.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton3)
    {
        //Interaction17
        //When toggleButton3 clicked reset timer slideMenuRight
        //reset expanded state timer on slideMenuRight
        slideMenuRight.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton4)
    {
        //Interaction18
        //When toggleButton4 clicked reset timer slideMenuRight
        //reset expanded state timer on slideMenuRight
        slideMenuRight.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton5)
    {
        //Interaction19
        //When toggleButton5 clicked reset timer slideMenuBottom
        //reset expanded state timer on slideMenuBottom
        slideMenuBottom.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton6)
    {
        //Interaction20
        //When toggleButton6 clicked reset timer slideMenuBottom
        //reset expanded state timer on slideMenuBottom
        slideMenuBottom.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton7)
    {
        //Interaction21
        //When toggleButton7 clicked reset timer slideMenuBottom
        //reset expanded state timer on slideMenuBottom
        slideMenuBottom.resetExpandedStateTimer();
    }
    else if (&src == &toggleButton8)
    {
        //Interaction22
        //When toggleButton8 clicked reset timer slideMenuBottom
        //reset expanded state timer on slideMenuBottom
        slideMenuBottom.resetExpandedStateTimer();
    }
    else if (&src == &button6)
    {
        //Interaction10
        //When button6 clicked reset timer slideMenuTop
        //reset expanded state timer on slideMenuTop
        slideMenuTop.resetExpandedStateTimer();
    }
    else if (&src == &button7)
    {
        //Interaction11
        //When button7 clicked reset timer slideMenuTop
        //reset expanded state timer on slideMenuTop
        slideMenuTop.resetExpandedStateTimer();
    }
    else if (&src == &button8)
    {
        //Interaction12
        //When button8 clicked reset timer slideMenuTop
        //reset expanded state timer on slideMenuTop
        slideMenuTop.resetExpandedStateTimer();
    }
    else if (&src == &button9)
    {
        //Interaction13
        //When button9 clicked reset timer slideMenuTop
        //reset expanded state timer on slideMenuTop
        slideMenuTop.resetExpandedStateTimer();
    }
    else if (&src == &button10)
    {
        //Interaction14
        //When button10 clicked reset timer slideMenuTop
        //reset expanded state timer on slideMenuTop
        slideMenuTop.resetExpandedStateTimer();
    }
    else if (&src == &buttonmain)
    {
        //Interaction24
        //When buttonmain clicked change screen to Screen2
        //Go to Screen2 with screen transition towards North
        application().gotoScreen2ScreenSlideTransitionNorth();
    }
}

void MainViewBase::slideMenuStateChangedCallbackHandler(const touchgfx::SlideMenu& src)
{
    if (&src == &slideMenuLeft)
    {
        //Interaction4
        //When slideMenuLeft state changed call collapseAllOtherSlideMenu on Main
        //Call collapseAllOtherSlideMenu
        collapseAllOtherSlideMenu(src);
    }
    else if (&src == &slideMenuRight)
    {
        //Interaction3
        //When slideMenuRight state changed call collapseAllOtherSlideMenu on Main
        //Call collapseAllOtherSlideMenu
        collapseAllOtherSlideMenu(src);
    }
    else if (&src == &slideMenuBottom)
    {
        //Interaction2
        //When slideMenuBottom state changed call collapseAllOtherSlideMenu on Main
        //Call collapseAllOtherSlideMenu
        collapseAllOtherSlideMenu(src);
    }
    else if (&src == &slideMenuTop)
    {
        //Interaction1
        //When slideMenuTop state changed call collapseAllOtherSlideMenu on Main
        //Call collapseAllOtherSlideMenu
        collapseAllOtherSlideMenu(src);
    }
}
