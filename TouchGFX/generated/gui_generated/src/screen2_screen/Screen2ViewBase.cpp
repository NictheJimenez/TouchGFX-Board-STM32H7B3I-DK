/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_SCREEN1_ID));

    textAreaHourCaption.setXY(101, 51);
    textAreaHourCaption.setColor(touchgfx::Color::getColorFrom24BitRGB(171, 171, 171));
    textAreaHourCaption.setLinespacing(0);
    textAreaHourCaption.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));

    textAreaHour.setXY(100, 76);
    textAreaHour.setColor(touchgfx::Color::getColorFrom24BitRGB(171, 171, 171));
    textAreaHour.setLinespacing(0);
    Unicode::snprintf(textAreaHourBuffer, TEXTAREAHOUR_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3).getText());
    textAreaHour.setWildcard(textAreaHourBuffer);
    textAreaHour.resizeToCurrentText();
    textAreaHour.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    buttonSaveHour.setXY(100, 136);
    buttonSaveHour.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_ROUNDNEW_ID), touchgfx::Bitmap(BITMAP_BTN_ROUND_PRESSEDNEW_ID));
    buttonSaveHour.setLabelText(touchgfx::TypedText(T_SINGLEUSEID4));
    buttonSaveHour.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(66, 66, 66));
    buttonSaveHour.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(166, 166, 166));
    buttonSaveHour.setAction(buttonCallback);

    buttonHourUp.setXY(183, 51);
    buttonHourUp.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonHourUp.setAction(buttonCallback);

    buttonHourDown.setXY(183, 106);
    buttonHourDown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttonHourDown.setAction(buttonCallback);

    buttonMinuteUp.setXY(265, 51);
    buttonMinuteUp.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonMinuteUp.setAction(buttonCallback);

    buttonMinuteDown.setXY(265, 106);
    buttonMinuteDown.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttonMinuteDown.setAction(buttonCallback);

    textAreaMinuteCaption.setXY(316, 51);
    textAreaMinuteCaption.setColor(touchgfx::Color::getColorFrom24BitRGB(171, 171, 171));
    textAreaMinuteCaption.setLinespacing(0);
    textAreaMinuteCaption.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    textAreaMinute.setXY(324, 76);
    textAreaMinute.setColor(touchgfx::Color::getColorFrom24BitRGB(171, 171, 171));
    textAreaMinute.setLinespacing(0);
    Unicode::snprintf(textAreaMinuteBuffer, TEXTAREAMINUTE_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID7).getText());
    textAreaMinute.setWildcard(textAreaMinuteBuffer);
    textAreaMinute.resizeToCurrentText();
    textAreaMinute.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    buttonSaveMinute.setXY(316, 136);
    buttonSaveMinute.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_ROUNDNEW_ID), touchgfx::Bitmap(BITMAP_BTN_ROUND_PRESSEDNEW_ID));
    buttonSaveMinute.setLabelText(touchgfx::TypedText(T_SINGLEUSEID8));
    buttonSaveMinute.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(66, 66, 66));
    buttonSaveMinute.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(166, 166, 166));
    buttonSaveMinute.setAction(buttonCallback);

    buttonClock.setXY(192, 190);
    buttonClock.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_ROUND_ID), touchgfx::Bitmap(BITMAP_BTN_ROUND_PRESSED_ID));
    buttonClock.setLabelText(touchgfx::TypedText(T_SINGLEUSEID9));
    buttonClock.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(66, 66, 66));
    buttonClock.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(166, 166, 166));
    buttonClock.setAction(buttonCallback);

    add(__background);
    add(background);
    add(textAreaHourCaption);
    add(textAreaHour);
    add(buttonSaveHour);
    add(buttonHourUp);
    add(buttonHourDown);
    add(buttonMinuteUp);
    add(buttonMinuteDown);
    add(textAreaMinuteCaption);
    add(textAreaMinute);
    add(buttonSaveMinute);
    add(buttonClock);
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonSaveHour)
    {
        //SaveHourbuttonisclicked
        //When buttonSaveHour clicked call virtual function
        //Call buttonSaveHourClicked
        buttonSaveHourClicked();
    }
    else if (&src == &buttonHourUp)
    {
        //Hourupbuttonisclicked
        //When buttonHourUp clicked call virtual function
        //Call buttonHourUpClicked
        buttonHourUpClicked();
    }
    else if (&src == &buttonHourDown)
    {
        //Hourdownbuttonisclicked
        //When buttonHourDown clicked call virtual function
        //Call buttonHourDownClicked
        buttonHourDownClicked();
    }
    else if (&src == &buttonMinuteUp)
    {
        //Minuteupbuttonisclicked
        //When buttonMinuteUp clicked call virtual function
        //Call buttonMinuteUpClicked
        buttonMinuteUpClicked();
    }
    else if (&src == &buttonMinuteDown)
    {
        //Minutedownbuttonisclicked
        //When buttonMinuteDown clicked call virtual function
        //Call buttonMinuteDownClicked
        buttonMinuteDownClicked();
    }
    else if (&src == &buttonSaveMinute)
    {
        //SaveMinutebuttonisclicked
        //When buttonSaveMinute clicked call virtual function
        //Call buttonSaveMinuteClicked
        buttonSaveMinuteClicked();
    }
    else if (&src == &buttonClock)
    {
        //Interaction1
        //When buttonClock clicked change screen to Screen3
        //Go to Screen3 with screen transition towards North
        application().gotoScreen3ScreenWipeTransitionNorth();
    }
}
