/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/wifi_screen/WifiViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

WifiViewBase::WifiViewBase() :
    buttonCallback(this, &WifiViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    ButtonSettings.setXY(415, 232);
    ButtonSettings.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_ROUNDNEW_ID), touchgfx::Bitmap(BITMAP_BTN_ROUND_PRESSEDNEW_ID));
    ButtonSettings.setLabelText(touchgfx::TypedText(T_SINGLEUSEID16));
    ButtonSettings.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    ButtonSettings.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    ButtonSettings.setAction(buttonCallback);

    add(__background);
    add(box1);
    add(ButtonSettings);
}

void WifiViewBase::setupScreen()
{

}

void WifiViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &ButtonSettings)
    {
        //ChangeToScreenSettings
        //When ButtonSettings clicked change screen to Wifi_Settings
        //Go to Wifi_Settings with no screen transition
        application().gotoWifi_SettingsScreenNoTransition();
    }
}
