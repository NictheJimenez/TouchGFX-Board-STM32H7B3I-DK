/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef WIFI_SETTINGSVIEWBASE_HPP
#define WIFI_SETTINGSVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/wifi_settings_screen/Wifi_SettingsPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class Wifi_SettingsViewBase : public touchgfx::View<Wifi_SettingsPresenter>
{
public:
    Wifi_SettingsViewBase();
    virtual ~Wifi_SettingsViewBase() {}
    virtual void setupScreen();

    /*
     * Custom Actions
     */
    virtual void KeyboardSelectedVar(uint8_t value);
    virtual void afterTransition();

    /*
     * Virtual Action Handlers
     */
    virtual void KeyboardSelected(uint8_t value)
    {
        // Override and implement this function in Wifi_Settings
    }

    virtual void updateScreen()
    {
        // Override and implement this function in Wifi_Settings
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image ScreenSettings;
    touchgfx::Box box1;
    touchgfx::TextArea Wifi;
    touchgfx::ButtonWithLabel ButtonSettings_Ok;
    touchgfx::ButtonWithLabel ButtonSettings_Cancel;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::TextAreaWithOneWildcard textAreaID;
    touchgfx::BoxWithBorder boxWithBorder_PW;
    touchgfx::TextAreaWithOneWildcard textAreaID_PW;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea2;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonSSID;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonPassword;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAID_SIZE = 18;
    touchgfx::Unicode::UnicodeChar textAreaIDBuffer[TEXTAREAID_SIZE];
    static const uint16_t TEXTAREAID_PW_SIZE = 18;
    touchgfx::Unicode::UnicodeChar textAreaID_PWBuffer[TEXTAREAID_PW_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Wifi_SettingsViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Wifi_SettingsViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // WIFI_SETTINGSVIEWBASE_HPP
