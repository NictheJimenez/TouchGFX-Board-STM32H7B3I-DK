/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN4VIEWBASE_HPP
#define SCREEN4VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen4_screen/Screen4Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/scrollers/ScrollWheel.hpp>
#include <gui/containers/MenuElement.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/scrollers/ScrollList.hpp>
#include <touchgfx/widgets/Button.hpp>

class Screen4ViewBase : public touchgfx::View<Screen4Presenter>
{
public:
    Screen4ViewBase();
    virtual ~Screen4ViewBase() {}
    virtual void setupScreen();

    virtual void scrollListUpdateItem(MenuElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen4
    }

    virtual void scrollWheelUpdateItem(MenuElement& item, int16_t itemIndex)
    {
        // Override and implement this function in Screen4
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box boxBackground;
    touchgfx::Image background;
    touchgfx::ScrollWheel scrollWheel;
    touchgfx::DrawableListItems<MenuElement, 5> scrollWheelListItems;
    touchgfx::Image overlay;
    touchgfx::Image selectedIcon;
    touchgfx::TextAreaWithOneWildcard selectedVal;
    touchgfx::ScrollList scrollList;
    touchgfx::DrawableListItems<MenuElement, 6> scrollListListItems;
    touchgfx::Button buttonwithalpha0_1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t SELECTEDVAL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar selectedValBuffer[SELECTEDVAL_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen4ViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<Screen4ViewBase, touchgfx::DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

};

#endif // SCREEN4VIEWBASE_HPP
